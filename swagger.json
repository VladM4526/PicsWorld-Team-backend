{
	"openapi": "3.0.1",
	"info": {
		"title": "PicsWorldProject API",
		"version": "1.0.0",
		"description": "Documentation for PicsWorldProject, water tracker"
	},
	"consumes": ["application/json", "multipart/form-data"],
	"produces": ["application/json", "multipart/form-data"],
	"servers": [
		{
			"url": "https://trackerwaterapp.onrender.com/api-docs/"
		},
		{
			"url": "http://localhost:3001"
		}
	],
	"tags": [
		{
			"name": "Auth",
			"description": "Authorization"
		},
		{
			"name": "User",
			"description": "Information about user"
		},
		{
			"name": "WaterRate",
			"description": "Infromstion about water rate"
		},
		{
			"name": "Water",
			"description": "information about water consumption"
		},
		{
			"name": "Today",
			"description": "Daily water consumption"
		},
		{
			"name": "Month",
			"description": "Monthly water consumption"
		}
	],

	"paths": {
		"/api/auth/signup": {
			"post": {
				"tags": ["Auth"],
				"summary": "Users registration",
				"parameters": [],

				"requestBody": {
					"description": "Registration`s object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignupRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "New User Registered",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SignupResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestResponse"
								}
							}
						}
					},
					"409": {
						"description": "User with such email already exists",
						"content": {}
					}
				}
			}
		},
		"/api/auth/signin": {
			"post": {
				"tags": ["Auth"],
				"summary": "Users login",
				"parameters": [],

				"requestBody": {
					"description": "Login object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SigninRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created session for existing user",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SigninResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestResponse"
								}
							}
						}
					},
					"401": {
						"description": "User with such email not found",
						"content": {}
					},
					"403": {
						"description": "Provided password is incorrect",
						"content": {}
					}
				}
			}
		},
		"/api/auth/verify/{verificationToken}": {
			"get": {
				"tags": ["Auth"],
				"summary": "User verification by verificationToken",
				"parameters": [
					{
						"in": "path",
						"name": "verificationToken",
						"required": "true",
						"type": "string",
						"description": "verification Token"
					}
				],
				"security": [{ "Bearer": [] }],

				"responses": {
					"200": {
						"description": "Verification successful",
						"content": {}
					},
					"404": {
						"description": "User not found",
						"content": {}
					}
				}
			}
		},
		"/api/auth/signout": {
			"delete": {
				"tags": ["Auth"],
				"summary": "Signout from account",
				"parameters": [],
				"security": [{ "Bearer": [] }],

				"responses": {
					"204": {
						"description": "User signed out",
						"content": {}
					},
					"401": {
						"description": "Bearer Auth failed",
						"content": {}
					}
				}
			}
		},

		"/api/users/current": {
			"get": {
				"tags": ["User"],
				"summary": "Info about current user",

				"security": [{ "Bearer": [] }],

				"responses": {
					"200": {
						"description": "Logged user returned",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CurrentUserResponse"
								}
							}
						}
					},
					"401": {
						"description": "Bearer Auth failed",
						"content": {}
					}
				}
			}
		},

		"/api/users/avatars": {
			"patch": {
				"tags": ["User"],
				"summary": "Change user`s avatar",
				"parameters": [],
				"security": [{ "bearer": [] }],
				"requestBody": {
					"description": "Change avatar object",
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/ChangeAvatarRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Avatar is updated",
						"content": {
							"multipart/form-data": {
								"schema": {
									"$ref": "#/components/schemas/ChangeAvatarResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/users/userinfo": {
			"patch": {
				"tags": ["User"],
				"summary": "Change info about user",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Change user info",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserInfoRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserInfoResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					},
					"409": {
						"description": "Provided email already exists",
						"content": {}
					}
				}
			}
		},
		"/api/users/waterrate/{userId}": {
			"put": {
				"tags": ["WaterRate"],
				"summary": "Put water rate",
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": "true",
						"type": "string",
						"description": "userId"
					}
				],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Change user water rate",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WaterRateRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WaterRateResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad request (invalid request body)",
						"content": {}
					}
				}
			}
		},
		"/api/water/create": {
			"post": {
				"tags": ["Water"],
				"summary": "Create water note",
				"parameters": [],
				"security": [{ "Bearer": [] }],

				"requestBody": {
					"description": "Create water note object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateWaterNoteRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Water note was successful created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateWaterNoteResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/water/update": {
			"patch": {
				"tags": ["Water"],
				"summary": "Update water note",
				"parameters": [],
				"security": [{ "Bearer": [] }],

				"requestBody": {
					"description": "Update water note object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateWaterNoteRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Water note update",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UpdateWaterNoteResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/water/delete": {
			"delete": {
				"tags": ["Water"],
				"summary": "Delete water note",
				"parameters": [],
				"security": [{ "Bearer": [] }],

				"requestBody": {
					"description": "Delete water note object",
					"required": true
				},
				"responses": {
					"201": {
						"description": "Water note delete",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SignupResponse"
								}
							}
						}
					},
					"400": {
						"description": "Water note was deleted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BadRequestResponse"
								}
							}
						}
					},
					"409": {
						"description": "User with such email already exists",
						"content": {}
					}
				}
			}
		}
	},

	"components": {
		"schemas": {
			"SignupRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User`s password",
						"example": "abcde123",
						"minLength": "8",
						"maxLength": "64"
					}
				}
			},
			"SignupResponse": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					}
				}
			},

			"SigninRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User`s password",
						"example": "abcde123",
						"minLength": "8",
						"maxLength": "64"
					}
				}
			},
			"SigninResponse": {
				"type": "object",
				"required": ["user", "token"],
				"properties": {
					"user": {
						"$ref": "#/components/schemas/SignupResponse"
					},
					"token": {
						"type": "string",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW"
					}
				}
			},
			"BadRequestResponse": {
				"type": "object",

				"properties": {
					"status": {
						"type": "integer",
						"description": "error status code",
						"example": "400"
					},
					"message": {
						"type": "string",
						"description": "error message",
						"example": "Bad request"
					}
				}
			},
			"VerificationRequest": {
				"type": "object",
				"required": ["verificationToken"],
				"properties": {
					"name": {
						"type": "integer",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW"
					}
				}
			},
			"CurrentUserRequest": {
				"type": "object",
				"required": ["email"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					}
				}
			},
			"CurrentUserResponse": {
				"type": "object",
				"required": ["id", "name", "email", "waterRate"],
				"properties": {
					"id": {
						"type": "string",
						"description": "User`s id",
						"example": "9578a252-1d7a-4fcc-82e2-d1a528dd3d0c"
					},
					"name": {
						"type": "string",
						"description": "User`s name",
						"maxLength": "32"
					},
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					},
					"waterRate": {
						"type": "integer",
						"description": "User`s water rate"
					}
				}
			},
			"ChangeAvatarRequest": {
				"type": "object",

				"properties": {
					"avatar": {
						"type": "file",
						"description": "User`s avatar"
					}
				}
			},
			"ChangeAvatarResponse": {
				"type": "object",
				"required": ["avatar"],
				"properties": {
					"avatar": {
						"type": "file",
						"description": "User`s avatar"
					}
				}
			},
			"UserInfoRequest": {
				"type": "object",

				"properties": {
					"name": {
						"type": "string",
						"description": "User`s name",
						"maxLength": "32"
					},
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					},
					"gender": {
						"type": "string",
						"description": "User`s gender"
					},
					"currentPassword": {
						"type": "string",
						"description": "User`s current password",
						"example": "abcde123",
						"minLength": "8",
						"maxLength": "64"
					},
					"newPassword": {
						"type": "string",
						"description": "User`s new password",
						"example": "abcde123",
						"minLength": "8",
						"maxLength": "64"
					},
					"confirmNewPassword": {
						"type": "string",
						"description": "User`s new password",
						"example": "abcde123",
						"minLength": "8",
						"maxLength": "64"
					}
				}
			},
			"UserInfoResponse": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "User`s id",
						"example": "9578a252-1d7a-4fcc-82e2-d1a528dd3d0c"
					},
					"name": {
						"type": "string",
						"description": "User`s name",
						"maxLength": "32"
					},
					"email": {
						"type": "string",
						"description": "User`s email",
						"format": "email"
					},
					"gender": {
						"type": "string",
						"description": "User`s gender"
					},
					"password": {
						"type": "string",
						"description": "User`s password",
						"example": "abcde123",
						"minLength": "8",
						"maxLength": "64"
					}
				}
			},
			"WaterRateRequest": {
				"type": "object",
				"required": ["userId", "waterRate"],
				"properties": {
					"waterRate": {
						"type": "integer",
						"description": "User`s water Rate",
						"minLength": "0",
						"maxLength": "15000"
					}
				}
			},
			"WaterRateResponse": {
				"type": "object",
				"required": ["waterRate"],
				"properties": {
					"waterRate": {
						"type": "integer",
						"description": "User`s water rate"
					}
				}
			},
			"CreateWaterNoteRequest": {},
			"CreateWaterNoteResponse": {},
			"UpdateWaterNoteRequest": {},
			"UpdateWaterNoteResponse": {}
		},
		"securitySchemes": {
			"bearer": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
